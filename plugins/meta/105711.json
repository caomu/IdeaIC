{"id":105711,"xmlId":"com.illuminatedcloud2.intellij","name":"Illuminated Cloud 2","description":"\n        <p>\n            <b>Illuminated Cloud</b> brings the modern feature set of JetBrains' powerful IDEs to Salesforce\n            development. Illuminated Cloud not only saves you time with its <b>intelligent auto-completion</b> for all\n            Salesforce programming languages and metadata types, but it also <b>recognizes issues</b> in your code and\n            <b>offers suggestions</b> for how to correct them. With Illuminated Cloud's <b>refactoring</b> capabilities,\n            you'll be able to <b>own and evolve</b> your Salesforce code base like never before.\n        </p>\n        <p>\n            Illuminated Cloud provides full support for <b>traditional</b> and <b>Salesforce DX</b> development\n            models—against both scratch orgs and non-scratch orgs—allowing you to flow seamlessly between\n            the various\n            models in a single tool. Because Illuminated Cloud extends JetBrains' powerful IDEs, you can leverage their\n            extensive capabilities including best-in-class Web application development features (commercial IDEs only),\n            seamless <b>version control integration</b>, and first-class integrations with <b>task management</b> and\n            <b>bug tracking</b> systems.\n        </p>\n        <p>\n            Illuminated Cloud dramatically simplifies development and deployment of <b>Apex</b>, <b>Visualforce</b>,\n            <b>Lightning (Aura and LWC)</b>, and other Salesforce metadata types with modern IDE features such as:\n        </p>\n\n        <ul>\n            <li>Intelligent Code Completion and Time-Saving Live Templates</li>\n            <li>Extensive Source Code Navigation and Cross-Referencing</li>\n            <li>Refactoring</li>\n            <li>Code Inspections and Intentions</li>\n            <li>Intelligent Source Code Generation</li>\n            <li>Content Type-Aware Static Resource Management and Static Resource Bundles</li>\n            <li>Integrated API Documentation and ApexDoc Support</li>\n            <li>Configurable Source Code Formatters</li>\n            <li>Template-Based Source File Creation</li>\n            <li>Full Salesforce DX Support</li>\n            <li>Offline Apex Debugger</li>\n            <li>Integrated Apex Unit Test Execution and Code Coverage Analysis</li>\n            <li>Anonymous Apex/SOQL Query Execution and Apex Log Analyzer</li>\n            <li>Powerful Connection Management</li>\n            <li>Offline Symbol Table Generation</li>\n            <li>Flexible and Efficient Metadata Management</li>\n        </ul>\n\n        Note that Illuminated Cloud is a <a href=\"http://www.illuminatedcloud.com/purchase\">commercial offering</a> and\n        requires an active annual subscription-based license for continued access to its features.\n        ","tags":["Languages"],"vendor":"Rose Silver Software","version":"2.1.5.4","notes":"\n        <p><b>2.1.5.4</b></p>\n        <ul>\n            <li><b>Issue 1464 (redux)</b> - Implemented another fix for the visibility used when implementing methods,\n                specifically when implementing a <code>global</code> visibility method in a <code>private</code> class.\n                The correct visibility is <code>public</code>.\n            </li>\n            <li><b>Issue 1776 / Native Mac M1 Support</b> - Updated the embedded licensing software to a version that\n                supports Apple's new M1-based Macs. When used with with the early access builds of JetBrains' IDEs\n                (currently only IntelliJ IDEA) available in their\n                <a href=\"https://youtrack.jetbrains.com/issue/JBR-2526\">corresponding issue tracker entry</a>, this\n                provides a native version of the IDE as opposed to emulated under Rosetta 2. <b>NOTE:</b> This is to be\n                considered <b>beta</b> right now due to the early access nature of the base JetBrains IDEs. Please\n                report Illuminated Cloud 2-specific issues to\n                <a href=\"https://bitbucket.org/RoseSilverSoftware/illuminatedcloud/issues/1776\">issue 1776</a> and\n                more general JetBrains IDE issues via their issue tracker.\n            </li>\n            <li><b>Issue 1777</b> - Fixed an issue querying BigObjects and other types of system SObjects that do not\n                support query aggregates.\n            </li>\n            <li><b>Issue 1786</b> - Provided a workaround for an issue encountered by a few users where calls to the\n                <code>PartnerApi.getUserInfo</code> SOAP API result in a GACK (internal server error). This can manifest\n                in several ways, but ultimately they all lead back to that failed API call. I have reported this to\n                Salesforce as it appears to be a regression in Winter '21. The workaround is to get the same user\n                information via a SOQL query against the <code>User</code> system SObject instead.\n            </li>\n            <li>Added code folding support for custom label expressions in Apex, Visualforce, and Aura. When folded,\n                the corresponding message catalog value is shown instead of the <code>Label.&lt;labelName&gt;</code>,\n                <code>$Label.&lt;namespace&gt;.&lt;labelName&gt;</code>, or even\n                <code>{!$Label.&lt;namespace&gt;.&lt;labelName&gt;}</code> expression, and is shown quoted as\n                appropriate for the usage. This is <b>disabled</b> by default but can be enabled in\n                <b>Settings / Preferences &gt; Editor &gt; General &gt; Code Folding</b> under\n                <b>Apex &gt; Custom labels (Apex | Visualforce/Aura)</b>.\n            </li>\n            <li>Updated the modifier agreement code inspection to flag types with <code>protected</code> visibility as\n                invalid.\n            </li>\n            <li>Improved test execution behavior when the tests listed in a run config aren't actually found and/or\n                executed. Now the user is explicitly told about the former and tests are not executed, and in the case\n                of the latter, no attempt is made to find a matching log as none would have been generated.\n            </li>\n            <li>Implemented what I hope to be a solid fix for a re-entrant indexing issue.</li>\n            <li>Other related fixes and improvements.</li>\n        </ul>\n        ","optionalDependencies":["com.intellij.modules.java","com.jetbrains.php","com.intellij.modules.python","com.intellij.modules.ruby","com.intellij.modules.webstorm","com.intellij.copyright","com.intellij.modules.coverage","com.intellij.css","JavaScript","org.jetbrains.plugins.textmate"],"since":"193.4932.9","size":20141607}